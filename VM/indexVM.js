// Generated by CoffeeScript 1.3.3
(function() {

  define(["Ural/VM/itemVM", "Ural/Modules/pubSub"], function(itemVM, pubSub) {
    var ViewModel;
    return ViewModel = (function() {

      function ViewModel(resource, parentItem) {
        var _this = this;
        this.resource = resource;
        this.parentItem = parentItem;
        this.list = ko.observableArray();
        pubSub.sub("crud", "complete_create", function(item) {
          return _this.completeCreate(item);
        });
        pubSub.sub("crud", "complete_delete", function(item) {
          return _this.completeDelete(item);
        });
      }

      ViewModel.prototype.completeDelete = function(item) {
        if (item.resource === this.resource) {
          return this.list.remove(item.src.item);
        }
      };

      ViewModel.prototype.completeCreate = function(item) {
        if (item.resource === this.resource) {
          item.setSrc(null, null);
          return this.list.push(item);
        }
      };

      ViewModel.prototype.map = function(data) {
        var d, underlyingArray, _i, _len;
        underlyingArray = this.list();
        underlyingArray.splice(0, underlyingArray.length);
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          d = data[_i];
          underlyingArray.push(this.createItem(d));
        }
        return this.list.valueHasMutated();
      };

      ViewModel.prototype.createItem = function(data, status) {
        var vm;
        vm = this.onCreateItem();
        if (data) {
          vm.map(data);
        }
        if (status) {
          vm.setSrc(null, status);
        }
        return vm;
      };

      ViewModel.prototype.onCreateItem = function() {
        return new itemVM(this.resource, this.parentItem);
      };

      ViewModel.prototype.startCreate = function(some, event) {
        event.preventDefault();
        return pubSub.pub("crud", "start_create", this.createItem(null, "create"));
      };

      return ViewModel;

    })();
  });

}).call(this);
