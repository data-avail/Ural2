// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty;

  define(function() {
    var _flatData, _getActionUrl, _handleResult;
    _flatData = function(data) {
      var prop;
      for (prop in data) {
        if (!__hasProp.call(data, prop)) continue;
        if (typeof data[prop] === "object") {
          if (data[prop] instanceof Date) {
            data[prop] = data[prop].toUTCString();
          } else {
            delete data[prop];
          }
        }
      }
      return data;
    };
    _getActionUrl = function(resource, action) {
      return "/" + resource + "/" + action.charAt(0).toUpperCase() + action.slice(1);
    };
    _handleResult = function(resp, res, done) {
      if (res === "error") {
        return done({
          code: resp.status,
          message: resp.statusText
        });
      } else if (resp.errors || resp.error) {
        return done({
          code: 500,
          message: (resp.error ? resp.error : "Ошибка выполнения"),
          errors: resp.errors
        });
      } else {
        return done(null, resp);
      }
    };
    return {
      getUrl: function(resource, action, data) {
        return _getActionUrl(resource, action) + "/" + data.Id;
      },
      get: function(resource, filter, done) {
        return $.get(_getActionUrl(resource, "index") + "Json", filter).always(function(resp, res) {
          return _handleResult(resp, res, done);
        });
      },
      getNew: function(resource, parentData, done) {
        return $.post(_getActionUrl(resource, "getNew") + "Json", {
          Id: (parentData ? parentData.Id : null)
        }).always(function(resp, res) {
          if (res === "error") {
            return done({
              code: resp.status,
              message: resp.statusText
            });
          } else {
            return done(null, resp);
          }
        });
      },
      create: function(resource, data, done) {
        data = _flatData(data);
        return $.post(_getActionUrl(resource, "create") + "Json", data).always(function(resp, res) {
          return _handleResult(resp, res, done);
        });
      },
      update: function(resource, data, done) {
        data = _flatData(data);
        return $.post(_getActionUrl(resource, "edit") + "Json", data).always(function(resp, res) {
          return _handleResult(resp, res, done);
        });
      },
      "delete": function(resource, data, done) {
        return $.post(_getActionUrl(resource, "delete") + "Json", {
          Id: data.Id
        }).always(function(resp, res) {
          return _handleResult(resp, res, done);
        });
      },
      action: function(resource, act, data, done) {
        data = _flatData(data);
        return $.post(_getActionUrl(resource, act) + "Json", data).always(function(resp, res) {
          return _handleResult(resp, res, done);
        });
      }
    };
  });

}).call(this);
